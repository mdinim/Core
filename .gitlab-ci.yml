stages:
    - build
    - test
    - deploy

# explicit version is required to have the compatibility between lcov and gcov
image: gcc:8.3

build:
    stage: build
    before_script:
        - git submodule sync --recursive
        - git submodule update --init --recursive
        - apt-get update -qq && apt-get install -y -qq python3-pip
        - gcc -v
        - g++ -v
        - pip install pip --upgrade
        - pip3 install cmake --upgrade
        - cmake --version
    script:
        - mkdir build
        - cd build
        - cmake .. -DCMAKE_BUILD_TYPE=RELEASE
        - cmake --build .
    artifacts:
        paths:
            - build/
        expire_in: 15 minutes

test:
    stage: test
    script:
        - apt-get update -qq && apt-get install -y -qq python3-pip
        - pip3 install cmake --upgrade
        - cd build
        - ctest . -V --repeat-until-fail 10

coverage:
    stage: deploy
    script:
        - git submodule sync --recursive
        - git submodule update --init --recursive
        - apt-get update -qq && apt-get install -y -qq python3-pip alien
        - pip3 install cmake --upgrade
        - mkdir coverage 
        - cd coverage 
        # Manually download the RPM, apt does not contain the correct version
        - curl $LCOV_DOWNLOAD_PATH --output lcov.noarch.rpm
        - alien -i lcov.noarch.rpm
        - gcov -v
        - lcov -v
        - cmake .. -DCMAKE_BUILD_TYPE=DEBUG -DCREATE_COVERAGE_REPORT=ON
        - cmake --build . --target Overall_coverage_preproc
    after_script:
        - bash <(curl -s https://codecov.io/bash) -f coverage/Overall_coverage/coverage.info -t $CODECOV_TOKEN
    artifacts:
        paths:
            - coverage/Overall_coverage/coverage.info
        expire_in: 15 minutes

